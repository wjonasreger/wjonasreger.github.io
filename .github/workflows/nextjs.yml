# sample workflow for building and deploying a next.js site to github pages
#
# to get started with next.js see: https://nextjs.org/docs/getting-started
#
name: deploy next.js site to pages

on:
  # runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # allows you to run this workflow manually from the actions tab
  workflow_dispatch:

# sets permissions of the GITHUB_TOKEN to allow deployment to github pages
permissions:
  contents: read
  pages: write
  id-token: write

# allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# however, do not cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "unable to determine package manager"
            exit 1
          fi
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: setup pages
        uses: actions/configure-pages@v3
      - name: restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # if source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: build with next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: debug
        run: |
          echo "current directory: $(pwd)"
          echo "contents of current directory: $(ls)"
      - name: upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./out
          name: github-pages

  # deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: deploy to github pages
        id: deployment
        uses: actions/deploy-pages@v2
